<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
    xmlns:local="clr-namespace:WPFCommon">
    <Style TargetType="{x:Type local:TimeBoxEx}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Background" Value="{DynamicResource TimeBoxEx.Default.BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.Default.ForegroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.Default.BorderColor}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TimeBoxEx.Selection.BackgroundColor}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource TimeBoxEx.Selection.ForegroundColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TimeBoxEx}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Focusable="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock
                                x:Name="WaterMark"
                                Grid.Row="0"
                                Grid.Column="0"
                                Padding="4,0,4,0"
                                VerticalAlignment="Center"
                                Focusable="False"
                                Foreground="{DynamicResource TimeBoxEx.WaterMark.ForegroundColor}"
                                Opacity="0"
                                Text="{TemplateBinding WaterMarkString}" />
                            <!--  Backgroundを透明に設定しておかないとWaterMarkが見えなくなる  -->
                            <TextBox
                                x:Name="PART_TextBox1"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="2,2,2,2"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0"
                                Focusable="True"
                                Foreground="{TemplateBinding Foreground}"
                                InputMethod.IsInputMethodEnabled="False"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                IsReadOnlyCaretVisible="True"
                                MaxLength="6"
                                SelectionBrush="{TemplateBinding SelectionBrush}"
                                SelectionTextBrush="{TemplateBinding SelectionTextBrush}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                TextWrapping="NoWrap" />
                            <ToggleButton
                                x:Name="PART_Button1"
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="28"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                IsChecked="{Binding ElementName=PART_Popup1, Path=IsOpen}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <StackPanel Background="Transparent" Focusable="False">
                                            <svgc:SvgViewbox
                                                Width="20"
                                                Height="20"
                                                Margin="2,0,2,0"
                                                Focusable="False"
                                                Source="/Resources/Icon/TimePickerIcon.svg" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup
                                x:Name="PART_Popup1"
                                AllowsTransparency="True"
                                Focusable="False"
                                HorizontalOffset="0"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=border}"
                                StaysOpen="False"
                                VerticalOffset="2">
                                <Border
                                    Background="#ededed"
                                    BorderBrush="{DynamicResource TimeBoxEx.Selecter.BorderColor}"
                                    BorderThickness="1">
                                    <Viewbox Stretch="Uniform">
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <local:TimeSelecter
                                                x:Name="PART_Selecter"
                                                Grid.Row="0"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                DisplayMode="{TemplateBinding DisplayMode}" />
                                            <StackPanel
                                                Grid.Row="1"
                                                HorizontalAlignment="Right"
                                                DockPanel.Dock="Bottom"
                                                Orientation="Horizontal">
                                                <local:ButtonEx
                                                    x:Name="PART_OK_Button"
                                                    Width="60"
                                                    Height="22"
                                                    Margin="5,10,5,10"
                                                    Content="OK"
                                                    FontSize="9" />
                                                <local:ButtonEx
                                                    x:Name="PART_CANCEL_Button"
                                                    Width="60"
                                                    Height="22"
                                                    Margin="5,10,5,10"
                                                    Content="Cancel"
                                                    FontSize="9" />
                                            </StackPanel>
                                        </Grid>
                                    </Viewbox>
                                    <i:Interaction.Behaviors>
                                        <local:GripperBehavior />
                                    </i:Interaction.Behaviors>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="WaterMark" Property="Opacity" Value="100" />
                        </Trigger>
                        <Trigger Property="DisplayMode" Value="HM">
                            <Setter TargetName="PART_TextBox1" Property="MaxLength" Value="4" />
                        </Trigger>
                        <Trigger Property="DisplayMode" Value="H">
                            <Setter TargetName="PART_TextBox1" Property="MaxLength" Value="2" />
                        </Trigger>
                        <Trigger Property="IsShowSelecterButton" Value="False">
                            <Setter TargetName="PART_Button1" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowSelecterButton" Value="True" />
                                <Condition Property="DisplayMode" Value="HM" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="78" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowSelecterButton" Value="True" />
                                <Condition Property="DisplayMode" Value="H" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="56" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowSelecterButton" Value="False" />
                                <Condition Property="DisplayMode" Value="HMS" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="72" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowSelecterButton" Value="False" />
                                <Condition Property="DisplayMode" Value="HM" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="50" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowSelecterButton" Value="False" />
                                <Condition Property="DisplayMode" Value="H" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="28" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TimeBoxEx.MouseOver.BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.MouseOver.ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.MouseOver.BorderColor}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource TimeBoxEx.Focused.BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.Focused.ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.Focused.BorderColor}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="{DynamicResource TimeBoxEx.ReadOnly.BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.ReadOnly.ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.ReadOnly.BorderColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TimeBoxEx.Disabled.BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.Disabled.ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.Disabled.BorderColor}" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="{DynamicResource TimeBoxEx.Error.BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource TimeBoxEx.Error.ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TimeBoxEx.Error.BorderColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
